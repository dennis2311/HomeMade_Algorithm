def bracket_stick_and_laser(arrangement):
    answer = 0
    index = 0

    def is_stick(start):
        if arrangement[start + 1] == ')':
            return False
        else:
            return True

    def is_laser(start):
        if arrangement[start + 1] == ')':
            return True
        else:
            return False

    def is_laser_end(end):
        if arrangement[end-1] == '(':
            return True
        else:
            return False

    def get_splited_times(start):
        bracket_difference = 1
        splited_times = 1
        start_point = start + 1
        sticks = 1

        while bracket_difference != 0:
            next_bracket = arrangement[start_point]

            if next_bracket == ')':
                bracket_difference -= 1

                if is_laser_end(start_point):
                    pass
                else:
                    sticks -= 1


            else:
                bracket_difference += 1 

                if is_laser(start_point):
                    splited_times += sticks
                elif is_stick(start_point):
                    splited_times += 1
                    sticks += 1

            start_point += 1

        stick_length = start_point - start + 1

        return splited_times, stick_length


    while index < len(arrangement):
        if arrangement[index] == '(':
            if is_stick(index):
                splited_times, stick_length = get_splited_times(index)
                answer += splited_times
                index += stick_length
            # else:     위에서 걸러지는 case 들임
            #     index+=1
        else:
            index += 1

    return answer

arrangement = "(())()((()(())()))"
print(str(bracket_stick_and_laser(arrangement)))
